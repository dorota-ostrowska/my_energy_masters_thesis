# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class Offer(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, id_offer: int=None, tarrif: str=None, pv_installation: bool=None):  # noqa: E501
        """Offer - a model defined in Swagger

        :param id_offer: The id_offer of this Offer.  # noqa: E501
        :type id_offer: int
        :param tarrif: The tarrif of this Offer.  # noqa: E501
        :type tarrif: str
        :param pv_installation: The pv_installation of this Offer.  # noqa: E501
        :type pv_installation: bool
        """
        self.swagger_types = {
            'id_offer': int,
            'tarrif': str,
            'pv_installation': bool
        }

        self.attribute_map = {
            'id_offer': 'id_offer',
            'tarrif': 'tarrif',
            'pv_installation': 'pv_installation'
        }
        self._id_offer = id_offer
        self._tarrif = tarrif
        self._pv_installation = pv_installation

    @classmethod
    def from_dict(cls, dikt) -> 'Offer':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Offer of this Offer.  # noqa: E501
        :rtype: Offer
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id_offer(self) -> int:
        """Gets the id_offer of this Offer.

        A unique ID of an offer.  # noqa: E501

        :return: The id_offer of this Offer.
        :rtype: int
        """
        return self._id_offer

    @id_offer.setter
    def id_offer(self, id_offer: int):
        """Sets the id_offer of this Offer.

        A unique ID of an offer.  # noqa: E501

        :param id_offer: The id_offer of this Offer.
        :type id_offer: int
        """

        self._id_offer = id_offer

    @property
    def tarrif(self) -> str:
        """Gets the tarrif of this Offer.

        A price plan according to which electricity sellers offer electricity to their customers.  # noqa: E501

        :return: The tarrif of this Offer.
        :rtype: str
        """
        return self._tarrif

    @tarrif.setter
    def tarrif(self, tarrif: str):
        """Sets the tarrif of this Offer.

        A price plan according to which electricity sellers offer electricity to their customers.  # noqa: E501

        :param tarrif: The tarrif of this Offer.
        :type tarrif: str
        """

        self._tarrif = tarrif

    @property
    def pv_installation(self) -> bool:
        """Gets the pv_installation of this Offer.

        Information whether an energy source, such as a photovoltaic installation, is connected to the meter. 0 - no, 1 - yes.  # noqa: E501

        :return: The pv_installation of this Offer.
        :rtype: bool
        """
        return self._pv_installation

    @pv_installation.setter
    def pv_installation(self, pv_installation: bool):
        """Sets the pv_installation of this Offer.

        Information whether an energy source, such as a photovoltaic installation, is connected to the meter. 0 - no, 1 - yes.  # noqa: E501

        :param pv_installation: The pv_installation of this Offer.
        :type pv_installation: bool
        """

        self._pv_installation = pv_installation
