# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class Address(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, id_address: int=None, street: str=None, house_number: int=None, zip_code: str=None, city: str=None, additional_info: str=None):  # noqa: E501
        """Address - a model defined in Swagger

        :param id_address: The id_address of this Address.  # noqa: E501
        :type id_address: int
        :param street: The street of this Address.  # noqa: E501
        :type street: str
        :param house_number: The house_number of this Address.  # noqa: E501
        :type house_number: int
        :param zip_code: The zip_code of this Address.  # noqa: E501
        :type zip_code: str
        :param city: The city of this Address.  # noqa: E501
        :type city: str
        :param additional_info: The additional_info of this Address.  # noqa: E501
        :type additional_info: str
        """
        self.swagger_types = {
            'id_address': int,
            'street': str,
            'house_number': int,
            'zip_code': str,
            'city': str,
            'additional_info': str
        }

        self.attribute_map = {
            'id_address': 'id_address',
            'street': 'street',
            'house_number': 'house_number',
            'zip_code': 'zip_code',
            'city': 'city',
            'additional_info': 'additional_info'
        }
        self._id_address = id_address
        self._street = street
        self._house_number = house_number
        self._zip_code = zip_code
        self._city = city
        self._additional_info = additional_info

    @classmethod
    def from_dict(cls, dikt) -> 'Address':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Address of this Address.  # noqa: E501
        :rtype: Address
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id_address(self) -> int:
        """Gets the id_address of this Address.

        A unique ID of an address. Many clients can live at the address.  # noqa: E501

        :return: The id_address of this Address.
        :rtype: int
        """
        return self._id_address

    @id_address.setter
    def id_address(self, id_address: int):
        """Sets the id_address of this Address.

        A unique ID of an address. Many clients can live at the address.  # noqa: E501

        :param id_address: The id_address of this Address.
        :type id_address: int
        """

        self._id_address = id_address

    @property
    def street(self) -> str:
        """Gets the street of this Address.

        A street's name.  # noqa: E501

        :return: The street of this Address.
        :rtype: str
        """
        return self._street

    @street.setter
    def street(self, street: str):
        """Sets the street of this Address.

        A street's name.  # noqa: E501

        :param street: The street of this Address.
        :type street: str
        """

        self._street = street

    @property
    def house_number(self) -> int:
        """Gets the house_number of this Address.

        A house's number.  # noqa: E501

        :return: The house_number of this Address.
        :rtype: int
        """
        return self._house_number

    @house_number.setter
    def house_number(self, house_number: int):
        """Sets the house_number of this Address.

        A house's number.  # noqa: E501

        :param house_number: The house_number of this Address.
        :type house_number: int
        """

        self._house_number = house_number

    @property
    def zip_code(self) -> str:
        """Gets the zip_code of this Address.

        A postal code.  # noqa: E501

        :return: The zip_code of this Address.
        :rtype: str
        """
        return self._zip_code

    @zip_code.setter
    def zip_code(self, zip_code: str):
        """Sets the zip_code of this Address.

        A postal code.  # noqa: E501

        :param zip_code: The zip_code of this Address.
        :type zip_code: str
        """

        self._zip_code = zip_code

    @property
    def city(self) -> str:
        """Gets the city of this Address.

        A city's name.  # noqa: E501

        :return: The city of this Address.
        :rtype: str
        """
        return self._city

    @city.setter
    def city(self, city: str):
        """Sets the city of this Address.

        A city's name.  # noqa: E501

        :param city: The city of this Address.
        :type city: str
        """

        self._city = city

    @property
    def additional_info(self) -> str:
        """Gets the additional_info of this Address.

        Floor, flat's number, etc.  # noqa: E501

        :return: The additional_info of this Address.
        :rtype: str
        """
        return self._additional_info

    @additional_info.setter
    def additional_info(self, additional_info: str):
        """Sets the additional_info of this Address.

        Floor, flat's number, etc.  # noqa: E501

        :param additional_info: The additional_info of this Address.
        :type additional_info: str
        """

        self._additional_info = additional_info
