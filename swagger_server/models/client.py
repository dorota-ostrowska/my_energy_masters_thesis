# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class Client(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, id_client: int=None, name: str=None, surname: str=None, pesel: str=None, email: str=None, password: str=None):  # noqa: E501
        """Client - a model defined in Swagger

        :param id_client: The id_client of this Client.  # noqa: E501
        :type id_client: int
        :param name: The name of this Client.  # noqa: E501
        :type name: str
        :param surname: The surname of this Client.  # noqa: E501
        :type surname: str
        :param pesel: The pesel of this Client.  # noqa: E501
        :type pesel: str
        :param email: The email of this Client.  # noqa: E501
        :type email: str
        :param password: The password of this Client.  # noqa: E501
        :type password: str
        """
        self.swagger_types = {
            'id_client': int,
            'name': str,
            'surname': str,
            'pesel': str,
            'email': str,
            'password': str
        }

        self.attribute_map = {
            'id_client': 'id_client',
            'name': 'name',
            'surname': 'surname',
            'pesel': 'pesel',
            'email': 'email',
            'password': 'password'
        }
        self._id_client = id_client
        self._name = name
        self._surname = surname
        self._pesel = pesel
        self._email = email
        self._password = password

    @classmethod
    def from_dict(cls, dikt) -> 'Client':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Client of this Client.  # noqa: E501
        :rtype: Client
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id_client(self) -> int:
        """Gets the id_client of this Client.

        A unique ID of a client.  # noqa: E501

        :return: The id_client of this Client.
        :rtype: int
        """
        return self._id_client

    @id_client.setter
    def id_client(self, id_client: int):
        """Sets the id_client of this Client.

        A unique ID of a client.  # noqa: E501

        :param id_client: The id_client of this Client.
        :type id_client: int
        """

        self._id_client = id_client

    @property
    def name(self) -> str:
        """Gets the name of this Client.

        A name of a client.  # noqa: E501

        :return: The name of this Client.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this Client.

        A name of a client.  # noqa: E501

        :param name: The name of this Client.
        :type name: str
        """

        self._name = name

    @property
    def surname(self) -> str:
        """Gets the surname of this Client.

        A surname of a client.  # noqa: E501

        :return: The surname of this Client.
        :rtype: str
        """
        return self._surname

    @surname.setter
    def surname(self, surname: str):
        """Sets the surname of this Client.

        A surname of a client.  # noqa: E501

        :param surname: The surname of this Client.
        :type surname: str
        """

        self._surname = surname

    @property
    def pesel(self) -> str:
        """Gets the pesel of this Client.

        A unique ID number for a Pole, sth like password number.  # noqa: E501

        :return: The pesel of this Client.
        :rtype: str
        """
        return self._pesel

    @pesel.setter
    def pesel(self, pesel: str):
        """Sets the pesel of this Client.

        A unique ID number for a Pole, sth like password number.  # noqa: E501

        :param pesel: The pesel of this Client.
        :type pesel: str
        """

        self._pesel = pesel

    @property
    def email(self) -> str:
        """Gets the email of this Client.

        An email of a client.  # noqa: E501

        :return: The email of this Client.
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email: str):
        """Sets the email of this Client.

        An email of a client.  # noqa: E501

        :param email: The email of this Client.
        :type email: str
        """

        self._email = email

    @property
    def password(self) -> str:
        """Gets the password of this Client.

        A password to the MyEnergy account for a client.  # noqa: E501

        :return: The password of this Client.
        :rtype: str
        """
        return self._password

    @password.setter
    def password(self, password: str):
        """Sets the password of this Client.

        A password to the MyEnergy account for a client.  # noqa: E501

        :param password: The password of this Client.
        :type password: str
        """

        self._password = password
