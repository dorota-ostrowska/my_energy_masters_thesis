# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class Reading(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, id_reading: int=None, time: datetime=None, used_energy: float=None):  # noqa: E501
        """Reading - a model defined in Swagger

        :param id_reading: The id_reading of this Reading.  # noqa: E501
        :type id_reading: int
        :param time: The time of this Reading.  # noqa: E501
        :type time: datetime
        :param used_energy: The used_energy of this Reading.  # noqa: E501
        :type used_energy: float
        """
        self.swagger_types = {
            'id_reading': int,
            'time': datetime,
            'used_energy': float
        }

        self.attribute_map = {
            'id_reading': 'id_reading',
            'time': 'time',
            'used_energy': 'used_energy'
        }
        self._id_reading = id_reading
        self._time = time
        self._used_energy = used_energy

    @classmethod
    def from_dict(cls, dikt) -> 'Reading':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Reading of this Reading.  # noqa: E501
        :rtype: Reading
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id_reading(self) -> int:
        """Gets the id_reading of this Reading.

        A unique ID of a single reading.  # noqa: E501

        :return: The id_reading of this Reading.
        :rtype: int
        """
        return self._id_reading

    @id_reading.setter
    def id_reading(self, id_reading: int):
        """Sets the id_reading of this Reading.

        A unique ID of a single reading.  # noqa: E501

        :param id_reading: The id_reading of this Reading.
        :type id_reading: int
        """

        self._id_reading = id_reading

    @property
    def time(self) -> datetime:
        """Gets the time of this Reading.

        An accurate date and time of a reading.  # noqa: E501

        :return: The time of this Reading.
        :rtype: datetime
        """
        return self._time

    @time.setter
    def time(self, time: datetime):
        """Sets the time of this Reading.

        An accurate date and time of a reading.  # noqa: E501

        :param time: The time of this Reading.
        :type time: datetime
        """

        self._time = time

    @property
    def used_energy(self) -> float:
        """Gets the used_energy of this Reading.

        The amount of energy that has been used up to the hour specified in the \"time\" column (kWh).  # noqa: E501

        :return: The used_energy of this Reading.
        :rtype: float
        """
        return self._used_energy

    @used_energy.setter
    def used_energy(self, used_energy: float):
        """Sets the used_energy of this Reading.

        The amount of energy that has been used up to the hour specified in the \"time\" column (kWh).  # noqa: E501

        :param used_energy: The used_energy of this Reading.
        :type used_energy: float
        """

        self._used_energy = used_energy
